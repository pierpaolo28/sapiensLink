name: Docker Image CI

on:
  push:
    branches: 
      - "dnl/deploy-on-vm"
    paths:
      - "backend/**"
      - "frontend/**"
      - ".github/workflows/sapiens-deploy.yml"


jobs:
  build:
    runs-on: ubuntu-latest
    environment: dev
    concurrency:
        group: deploy

    steps:

    - uses: actions/checkout@v4
      with:
        fetch-depth: 2
   
    - name: app_secrets.py file build
      working-directory: ./backend
      run: |
        echo "SENDGRID_API_KEY = '${{ secrets.SENDGRID_API_KEY }}'" > app_secrets.py
        echo "FROM_EMAIL = '${{ vars.FROM_EMAIL }}'" >> app_secrets.py
        echo "POSTGRESQL_USERNAME = '${{ vars.POSTGRESQL_USERNAME }}'" >> app_secrets.py
        echo "POSTGRESQL_PASSWORD = '${{ secrets.POSTGRESQL_PASSWORD }}'" >> app_secrets.py
        echo "GOOGLE_CLIENT_ID = '${{ secrets.GOOGLE_CLIENT_ID }}'" >> app_secrets.py
        echo "GOOGLE_CLIENT_SECRET = '${{ secrets.GOOGLE_CLIENT_SECRET }}'" >> app_secrets.py
        echo "DJANGO_SECRET_KEY = '${{ secrets.DJANGO_SECRET_KEY }}'" >> app_secrets.py
        echo "CUSTOM_HEADER_VALUE = '${{ secrets.CUSTOM_HEADER_VALUE }}'" >> app_secrets.py

    - name: .env file build
      working-directory: ./frontend 
      run: |
        echo "NEXT_PUBLIC_GOOGLE_CLIENT_ID = '${{ secrets.GOOGLE_CLIENT_ID }}'" > .env
        echo "NEXT_PUBLIC_MAILCHIMP_API_KEY = '${{ secrets.NEXT_PUBLIC_MAILCHIMP_API_KEY }}'" >> .env
        echo "NEXT_PUBLIC_FORMSPREE_API_KEY = '${{ secrets.NEXT_PUBLIC_FORMSPREE_API_KEY }}'" >> .env
        echo "NEXT_PUBLIC_X_NEXTJS_APPLICATION = '${{ secrets.CUSTOM_HEADER_VALUE }}'" >> .env
        echo "NEXT_PUBLIC_API_BASE_URL = '${{ vars.NEXT_PUBLIC_API_BASE_URL }}'" >> .env
        echo "NEXT_PUBLIC_WEBSOCKET_URL = '${{ vars.NEXT_PUBLIC_WEBSOCKET_URL }}'" >> .env

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ vars.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    
    - name: Build Nginx
      run: |
        docker build . -f backend/Dockerfile.nginx -t ${{ vars.DOCKERHUB_REPO }}:nginx --platform linux/arm64
        docker push ${{ vars.DOCKERHUB_REPO }}:nginx

    - name: Build Django
      working-directory: ./backend
      run: |
        docker build . -f Dockerfile  -t ${{ vars.DOCKERHUB_REPO }}:django --platform linux/arm64
        docker push ${{ vars.DOCKERHUB_REPO }}:django
    
    - name: Build Celery
      working-directory: ./backend
      run: |
        docker build . -f Dockerfile.celery  -t ${{ vars.DOCKERHUB_REPO }}:celery --platform linux/arm64
        docker push ${{ vars.DOCKERHUB_REPO }}:celery
  
    - name: Build NextJS
      working-directory: ./frontend
      run: |
        docker build . -f Dockerfile  -t ${{ vars.DOCKERHUB_REPO }}:nextjs --platform linux/arm64
        docker push ${{ vars.DOCKERHUB_REPO }}:nextjs

    - name: Copy docker-compose file
      uses: appleboy/scp-action@v0.1.7
      with:
        host: ${{ vars.SSH_HOST }}
        username: ${{ vars.SSH_USERNAME }}
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        port: 22
        source: "docker-compose.remote.yaml"
        target: .

    - name: Deploy new website
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ vars.SSH_HOST }}
        username: ${{ vars.SSH_USERNAME }}
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        port: 22
        script: |
          docker login -u ${{ vars.DOCKERHUB_USERNAME }} -p ${{ secrets.DOCKERHUB_TOKEN }}
          export DB_USER=${{ vars.POSTGRESQL_USERNAME }}
          export DB_PASSWORD=${{ secrets.POSTGRESQL_PASSWORD }}
          docker-compose -f docker-compose.remote.yaml down --remove-orphans
          docker-compose -f docker-compose.remote.yaml pull
          docker-compose -f docker-compose.remote.yaml up -d